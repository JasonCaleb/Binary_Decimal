# -*- coding: utf-8 -*-
"""Binary_Decimal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18USsmiXl8XGJ6hTMpmUR7_uc4tewUy3V

# Binary to Decimal
"""

# Binary to Decimal

# just in case if the user inputted is not a number
try:
  binary = int(input("Input the binary number: "))
  is_binary = True

  # to check if the entered number is a binary number
  for i in str(binary):
    if int(i) is 1 or int(i) is 0:
      pass

    else:
      is_binary = False
      break

  # to process the conversion of binary number to decimal number
  if is_binary == True:
    standard_number = -1
    decimal = 0

    # converting needs to read the binary numbers from back to front
    for i in range(len(str(binary))):
      if i == 0: # the condition when accessing the first number from the back
        operation_number = i+standard_number
        decimal += int(str(binary)[operation_number])*(2**i)
        
      else: # the rest
        operation_number = i*(-1)+(-1)
        decimal += int(str(binary)[operation_number])*(2**i)

    print(decimal)

  # a warn message for the user that the entered number is not a binary number
  else:
    print("the inputted number is not a binary number")

# a warn message for the user that the entered number is not a number
except ValueError:
  print("the inputted number is not a number")

"""# Decimal to Binary


"""

# Decimal to Binary

# just in case if the user inputted is not a number
try:
  decimal = int(input("Input the decimal number: "))
  binary = ""

  # deviding the inputted number with 2 until it remains 0 and
  # store the remainder of the division in a variabel named "binary"
  while decimal is not 0:
    binary += str(decimal%2)
    decimal //= 2

  # reversing the number in variabel named "binary"
  final_binary = ""
  standard_number = -1

  for i in range(len(binary)):
    if i == 0:  # the condition when accessing the first number from the back
      operation_number = i + standard_number
      final_binary += binary[operation_number]
     
    else: # the rest
      operation_number = (i * standard_number)+(-1)
      final_binary += binary[operation_number]

  print(final_binary)

# a warn message for the user that the entered number is not a number
except ValueError:
  print("the inputted number is not a number")